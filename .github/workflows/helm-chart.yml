---
name: Helm chart CI

on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Start minikube
        uses: medyagh/setup-minikube@latest
        with:
          driver: docker
          container-runtime: containerd
        timeout-minutes: 2

      - name: Build and run chart
        run: |
          docker build -t ictu/sonar:ci-latest .
          eval $(minikube -p minikube docker-env)
          minikube image load ictu/sonar:ci-latest
          kubectl create secret generic sonarqube-monitoring-secret --from-literal=monitoring_password=$(echo ${RANDOM} | md5sum | head -c 12)
          kubectl create secret generic sonarqube-postgresql-secret --from-literal=sonar_db_password=$(echo ${RANDOM} | md5sum | head -c 12) --from-literal=postgres_db_password=$(echo ${RANDOM} | md5sum | head -c 12)
          kubectl create secret generic sonarqube-admin-password-secret --from-literal=password=$(echo ${RANDOM} | md5sum | head -c 9)1A. --from-literal=currentPassword=admin
          helm dependency build helm
          helm upgrade --set-json='sonarqube.elasticsearch.bootstrapChecks="false"' --set-json='sonarqube.image.tag="ci-latest"' --set-json='postgresql.enabled="true"' --set-json='global.security.allowInsecureImages="true"' --install --render-subchart-notes ictu-sonarqube helm
        timeout-minutes: 9

      - name: Disable ES disk watermark checks
        run: |
          eval $(minikube -p minikube docker-env)
          kubectl wait pod/ictu-sonarqube-sonarqube-0 --timeout=1m --for=jsonpath='{.status.phase}'=Running
          kubectl logs -f pod/ictu-sonarqube-sonarqube-0 |& sed "/app\[\]\[o.s.a.SchedulerImpl\] Process\[es\] is up/ q"
          kubectl exec pod/ictu-sonarqube-sonarqube-0 -- curl -s -XPUT "http://localhost:9001/_cluster/settings" -H "Content-Type: application/json" -d '{"transient":{"cluster.routing.allocation.disk.threshold_enabled":false}}'
        timeout-minutes: 2

      - name: Wait for Sonar instance to start
        # profile for language 'web' is the last; assume everything is working if we got this far
        run: |
          eval $(minikube -p minikube docker-env)
          kubectl wait --all pods --timeout=5m --for=condition=Ready
          kubectl wait --all statefulsets --timeout=30s --for=jsonpath=status.availableReplicas=1
          kubectl logs -f pod/ictu-sonarqube-sonarqube-0 |& sed "/Current profile for language 'web' is 'Sonar way'/ q"
        timeout-minutes: 7
