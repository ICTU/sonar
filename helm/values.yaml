---
secrets:
  dbCredential: &dbCredential "sonarqube-postgresql-secret"
  sonarPassword: &sonarPassword "sonarqube-admin-password-secret"

settings:
  sonar.core.serverBaseURL: "test.local"
  sonar.forceAuthentication: false

postgresql:
  audit:
    logTimezone: "Europe/Amsterdam"
  auth:
    username: sonar
    database: sonar
    existingSecret: *dbCredential
    secretKeys:
      userPasswordKey: sonar_db_password
      adminPasswordKey: postgres_db_password
  primary:
    persistence:
      size: 1Gi
    extraVolumes:
      - name: tz-config
        hostPath:
          path: /etc/localtime
    extraVolumeMounts:
      - name: tz-config
        mountPath: /etc/localtime

sonarqube:
  image:
    repository: ictu/sonar
    tag: "10.8.1-developer"
    pullPolicy: IfNotPresent
  jdbcOverwrite:
    enabled: true
    jdbcUrl: jdbc:postgresql://ictu-sonarqube-postgresql:5432/sonar?socketTimeout=1500
    jdbcUsername: sonar
    jdbcSecretName: *dbCredential
    jdbcSecretPasswordKey: sonar_db_password
  community:
    enabled: false
  nginx:
    enabled: false
  postgresql:
    enabled: false
  initSysctl:
    enabled: false
  initFs:
    enabled: false
  ingress:
    enabled: false

  setAdminPassword:
    passwordSecretName: *sonarPassword

  env:
    - name: SONARQUBE_PASSWORD
      valueFrom:
        secretKeyRef:
          name: *sonarPassword
          key: password
          optional: true

  extraConfig:
    configmaps:
      - ictu-sonarqube-sonarqube-env-vars
