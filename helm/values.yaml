---
secrets:
  monitoringCredential: &monitoringCredential "sonarqube-monitoring-secret"
  postgresqlCredential: &postgresqlCredential "sonarqube-postgresql-secret"
  sonarAdminCredential: &sonarAdminCredential "sonarqube-admin-password-secret"

env_vars: []

settings:
  enabled: false
  sonar.core.serverBaseURL: test.local
  sonar.forceAuthentication: false

alm:
  enabled: false
  gitlab:
    key: ""
    personalAccessToken: ""
    url: ""

license:
  enabled: false
  key: ""

rbac:
  enabled: true
  all_global_permissions: ["admin", "profileadmin", "gateadmin", "scan", "provisioning"]
  all_project_permissions: ["admin", "codeviewer", "issueadmin", "securityhotspotadmin", "scan", "user"]
  user_groups:
    - name: "group-administrators"
      global_permissions: ["admin", "profileadmin", "gateadmin", "scan", "provisioning"]
      project_permissions: ["user", "codeviewer", "scan", "admin", "issueadmin", "securityhotspotadmin"]
    - name: "group-developers"
      global_permissions: ["gateadmin", "scan"]
      project_permissions: ["user", "codeviewer"]

postgresql:
# https://github.com/bitnami/charts/blob/main/bitnami/postgresql/README.md
# https://github.com/bitnami/charts/blob/main/bitnami/postgresql/values.yaml
  audit:
    logTimezone: Europe/Amsterdam
  auth:
    username: sonar
    database: sonar
    existingSecret: *postgresqlCredential
    secretKeys:
      userPasswordKey: sonar_db_password
      adminPasswordKey: postgres_db_password
  primary:
    persistence:
      size: 1Gi
    extraVolumes:
      - name: tz-config
        hostPath:
          path: /etc/localtime
    extraVolumeMounts:
      - name: tz-config
        mountPath: /etc/localtime

sonarqube:
# https://github.com/SonarSource/helm-chart-sonarqube/blob/master/charts/sonarqube/README.md
# https://github.com/SonarSource/helm-chart-sonarqube/blob/master/charts/sonarqube/values.yaml
  image:
    repository: ictu/sonar
    tag: 2025.4.2-developer
    pullPolicy: IfNotPresent
  jdbcOverwrite:
    enabled: true
    jdbcUrl: jdbc:postgresql://ictu-sonarqube-postgresql:5432/sonar?socketTimeout=1500
    jdbcUsername: sonar
    jdbcSecretName: *postgresqlCredential
    jdbcSecretPasswordKey: sonar_db_password
  edition: developer
  community:
    enabled: false
  nginx:
    enabled: false
  postgresql:
    enabled: false
  initSysctl:
    enabled: false
  initFs:
    enabled: false
  ingress:
    enabled: false

  monitoringPasscodeSecretName: *monitoringCredential
  monitoringPasscodeSecretKey: monitoring_password

  setAdminPassword:
    passwordSecretName: *sonarAdminCredential

  env:
    - name: SONARQUBE_PASSWORD
      valueFrom:
        secretKeyRef:
          name: *sonarAdminCredential
          key: password
          optional: true

  extraConfig:
    configmaps:
      - ictu-sonarqube-env-vars
